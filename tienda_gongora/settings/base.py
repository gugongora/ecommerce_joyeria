"""
Django settings for tienda_gongora project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
import environ

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent.parent

env = environ.Env(
    DEBUG=(bool, False),
)

# Ruta por defecto al .env si existe en el root del proyecto
environ.Env.read_env(os.path.join(BASE_DIR, ".env"))

SECRET_KEY = env("SECRET_KEY", default="!!-reemplaza-esto-en-prod-!!")
DEBUG = env("DEBUG")  # dev/prod lo sobreescriben

ALLOWED_HOSTS = env.list("ALLOWED_HOSTS", default=["127.0.0.1", "localhost"])


# API base URL (ajústalo según el entorno)
API_BASE_URL = env("API_BASE_URL", default="http://127.0.0.1:8000/api/")


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'store',
    'cart',
    'orders',
    'users',
    'payments',
    'conversion',
    'tailwind',
    'theme',
    'rest_framework',
    'corsheaders',
    'drf_yasg',
    'productos',
    'operaciones',
    'widget_tweaks',
    'django.contrib.humanize',
]

CORS_ALLOWED_ORIGINS = [
    "http://localhost:8000",

    # Añadir los dominios de tus sucursales y clientes externos
]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 20
}
# Configuración para JWT
from datetime import timedelta


# Configuración del paquete Simple JWT para la autenticación basada en tokens
SIMPLE_JWT = {
    # Tiempo de vida del token de acceso (usado para autenticar al usuario)
    'ACCESS_TOKEN_LIFETIME': timedelta(days=1),  # El token de acceso dura 1 día

    # Tiempo de vida del token de refresco (usado para obtener un nuevo token de acceso)
    'REFRESH_TOKEN_LIFETIME': timedelta(days=7),  # El token de refresco dura 7 días

    # Si se establece en True, cada vez que se use un refresh token, se generará uno nuevo
    'ROTATE_REFRESH_TOKENS': False,  # En este caso, no se rotan los tokens de refresco

    # Algoritmo de encriptación utilizado para firmar los tokens
    'ALGORITHM': 'HS256',

    # Clave secreta utilizada para firmar los tokens (debe estar definida en settings.py)
    'SIGNING_KEY': SECRET_KEY,

    # Tipo de autorización en el encabezado HTTP (Authorization: Bearer <token>)
    'AUTH_HEADER_TYPES': ('Bearer',),
}

# Indica el módulo raíz que contiene las rutas (URL) del proyecto Django
ROOT_URLCONF = 'tienda_gongora.urls'  # Aquí se define el archivo principal con las URLs de la aplicación

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'tienda_gongora.middleware.RedirectByGroupMiddleware',
]


TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'store.context_processors.categorias_api',
                'utils.context_processors.api_base_url',
            ],
        },
    },
]

WSGI_APPLICATION = 'tienda_gongora.wsgi.application'
ASGI_APPLICATION = "tienda_gongora.asgi.application"


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    "default": env.db(
        "DATABASE_URL",
        default=f"sqlite:///{BASE_DIR / 'db.sqlite3'}"
    )
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

# Zona horaria y lenguaje (Chile)
LANGUAGE_CODE = "es-cl"
TIME_ZONE = "America/Santiago"
USE_I18N = True
USE_TZ = True
USE_L10N = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

SESSION_ENGINE = 'django.contrib.sessions.backends.db'  # Para almacenar sesiones en la base de datos.


# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

LOGIN_REDIRECT_URL = 'store:product_list'  # o donde desees redirigir después del login
LOGOUT_REDIRECT_URL = 'store:product_list'

LOGIN_URL = 'users:login_register'

BASE_URL = "http://127.0.0.1:8000/"


TAILWIND_APP_NAME = 'theme'

# Email (dev/prod sobreescriben)
EMAIL_BACKEND = env(
    "EMAIL_BACKEND",
    default="django.core.mail.backends.console.EmailBackend"
)
EMAIL_HOST = env("EMAIL_HOST", default="")
EMAIL_PORT = env.int("EMAIL_PORT", default=587)
EMAIL_HOST_USER = env("EMAIL_HOST_USER", default="")
EMAIL_HOST_PASSWORD = env("EMAIL_HOST_PASSWORD", default="")
EMAIL_USE_TLS = env.bool("EMAIL_USE_TLS", default=True)
DEFAULT_FROM_EMAIL = env("DEFAULT_FROM_EMAIL", default="no-reply@localhost")

# Seguridad común (prod endurece)
CSRF_TRUSTED_ORIGINS = env.list("CSRF_TRUSTED_ORIGINS", default=[])

SECURE_PROXY_SSL_HEADER = tuple(env("SECURE_PROXY_SSL_HEADER", default="HTTP_X_FORWARDED_PROTO,https").split(","))
USE_X_FORWARDED_HOST = env.bool("USE_X_FORWARDED_HOST", default=True)

# Logging básico; prod lo refuerza
LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "handlers": {"console": {"class": "logging.StreamHandler"}},
    "root": {"handlers": ["console"], "level": "INFO"},
}
